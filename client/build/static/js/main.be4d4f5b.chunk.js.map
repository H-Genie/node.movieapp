{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","landingPage","lg","md","xs","overflow","href","movieId","className","src","alt","movieName","actorName","LandingPage","useState","movies","setMovies","mainMovieImage","setMainMovieImage","currentPage","setCurrentPage","endpoint","fetchMovies","fetch","json","results","page","margin","backdrop_path","overview","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","MovieInfo","bordered","release_date","runtime","vote_average","tagline","Favorite","variables","userFrom","movieTitle","movieInfo","moviePost","movieRunTime","favoriteNumber","setFavoriteNumber","favorited","setFavorited","Axios","MovieDetail","match","params","setMovie","casts","setCasts","actorToggle","setActorToggle","endpointCrew","endpointInfo","cast","profile_path","FavoritePage","favorites","setFavorites","fetchFavoredMovie","renderCards","favorite","content","console","log","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be4d4f5b.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '783cc29548d112c8fc331b8b7d9dd58d';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react';\r\n\r\nconst MainImage = props => {\r\n    return (\r\n        <div\r\n            style={{\r\n                background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                39%, rgba(0,0,0,0)\r\n                41%, rgba(0,0,0,0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`,\r\n                height: '500px',\r\n                backgroundSize: '100%, cover',\r\n                backgroundPosition: 'center center',\r\n                width: '100%',\r\n                position: 'relative'\r\n            }}\r\n        >\r\n            <div>\r\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\r\n                    <h2 style={{ color: 'white' }}>{props.title}</h2>\r\n                    <p style={{ color: 'white', fontSize: '1rem' }}>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainImage;","import React from 'react'\r\nimport { Col } from 'antd'\r\nimport './GridCards.css'\r\n\r\nfunction GridCards(props) {\r\n    if (props.landingPage) {\r\n        return (\r\n            <Col lg={6} md={8} xs={24}>\r\n                <div style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <a href={`/movie/${props.movieId}`} className=\"hover\">\r\n                        <img style={{ width: '100%', height: '480px' }} src={props.image} alt={props.movieName} />\r\n                        <p className=\"hover_title\">{props.movieName}</p>\r\n                    </a>\r\n                </div>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col lg={6} md={8} xs={24}>\r\n                <div style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <div className=\"hover\">\r\n                        <img style={{ width: '100%', height: '480px' }} src={props.image} alt={props.actorName} />\r\n                        <p className=\"hover_title\">{props.actorName}</p>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridCards\r\n","import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from './Sections/MainImage';\nimport { Row } from 'antd';\nimport GridCards from '../commons/GridCards';\n\nfunction LandingPage() {\n    const [movies, setMovies] = useState([]);\n    const [mainMovieImage, setMainMovieImage] = useState(null);\n    const [currentPage, setCurrentPage] = useState(0);\n\n    useEffect(() => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko-KR&page=1`;\n        fetchMovies(endpoint);\n    }, [])\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(response => {\n                setMovies([...movies, ...response.results]);\n                if (mainMovieImage === null) setMainMovieImage(response.results[0]);\n                setCurrentPage(response.page);\n            })\n    }\n\n    const loadMoreItems = () => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko-KR&page=${currentPage + 1}`;\n        fetchMovies(endpoint);\n    }\n\n    return (\n        <>\n            <div style={{ width: '100%', margin: 0 }}>\n                {mainMovieImage &&\n                    <MainImage\n                        image={`${IMAGE_BASE_URL}w1280${mainMovieImage.backdrop_path}`}\n                        title={mainMovieImage.title}\n                        text={mainMovieImage.overview}\n                    />\n                }\n                <div style={{ width: '85%', margin: '1rem auto' }}>\n                    <h2>Movies by latest</h2>\n                    <hr />\n                    <Row gutter={[16, 16]}>\n                        {movies && movies.map((movie, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    landingPage\n                                    image={movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                    movieId={movie.id}\n                                    movieName={movie.title}\n                                />\n                            </React.Fragment>\n                        ))}\n                    </Row>\n                </div>\n\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <button onClick={loadMoreItems}>Load More</button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">Favorite</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\r\nimport { Descriptions } from 'antd';\r\n\r\nfunction MovieInfo(props) {\r\n    let { movie } = props;\r\n\r\n    return (\r\n        <Descriptions title=\"Movie Info\" bordered>\r\n            <Descriptions.Item label=\"제목\">{movie.title}</Descriptions.Item>\r\n            <Descriptions.Item label=\"개봉일\">{movie.release_date}</Descriptions.Item>\r\n            <Descriptions.Item label=\"상영시간(분)\">{movie.runtime}</Descriptions.Item>\r\n            <Descriptions.Item label=\"평점\">{movie.vote_average}</Descriptions.Item>\r\n            <Descriptions.Item label=\"키워드\" span={2}>{movie.tagline}</Descriptions.Item>\r\n        </Descriptions>\r\n    )\r\n}\r\n\r\nexport default MovieInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { Button } from 'antd'\r\n\r\nfunction Favorite(props) {\r\n    const movieId = props.movieId;\r\n    const userFrom = props.userFrom;\r\n    const movieTitle = props.movieInfo.title;\r\n    const moviePost = props.movieInfo.backdrop_path;\r\n    const movieRunTime = props.movieInfo.runtime;\r\n\r\n    let variables = {\r\n        userFrom: userFrom,\r\n        movieId: movieId,\r\n        movieTitle: movieTitle,\r\n        moviePost: moviePost,\r\n        movieRunTime: movieRunTime\r\n    }\r\n\r\n    const [favoriteNumber, setFavoriteNumber] = useState(0);\r\n    const [favorited, setFavorited] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/favorite/favoriteNumber', variables)\r\n            .then(response => {\r\n                setFavoriteNumber(response.data.favoriteNumber)\r\n                if (response.data.success) {\r\n\r\n                } else {\r\n                    alert(\"숫자 정보를 가져오는데 실패했습니다.\")\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/favorite/favorited', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setFavorited(response.data.favorited)\r\n                } else {\r\n                    alert(\"정보를 가져오는데 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const onClickFavorite = () => {\r\n        if (favorited) {\r\n            Axios.post('/api/favorite/removeFromFavorite', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setFavoriteNumber(favoriteNumber - 1)\r\n                        setFavorited(!favorited)\r\n                    } else {\r\n                        alert('Favorite 리스트에서 지우는 것을 실패했습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            Axios.post('/api/favorite/addToFavorite', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setFavoriteNumber(favoriteNumber + 1)\r\n                        setFavorited(!favorited)\r\n                    } else {\r\n                        alert('Favorite 리스트에서 추가하는 것을 실패했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={onClickFavorite}>{favorited ? 'Not Favorite' : 'Add to Favorite'} {favoriteNumber}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../LandingPage/Sections/MainImage';\r\nimport MovieInfo from './Sections/MovieInfo';\r\nimport { Row } from 'antd';\r\nimport GridCards from '../commons/GridCards';\r\nimport Favorite from './Sections/Favorite';\r\n\r\nfunction MovieDetail(props) {\r\n    let movieId = props.match.params.movieId;\r\n    const [movie, setMovie] = useState([]);\r\n    const [casts, setCasts] = useState([]);\r\n    const [actorToggle, setActorToggle] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=ko-KR`;\r\n        let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=ko-KR`;\r\n\r\n        fetch(endpointInfo)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setMovie(response);\r\n            })\r\n\r\n        fetch(endpointCrew)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setCasts(response.cast)\r\n            })\r\n    }, [])\r\n\r\n    const toggleActorView = () => setActorToggle(!actorToggle)\r\n\r\n    return (\r\n        <div>\r\n            <MainImage\r\n                image={`${IMAGE_BASE_URL}w1280${movie.backdrop_path}`}\r\n                title={movie.title}\r\n                text={movie.overview}\r\n            />\r\n            <div style={{ width: '85%', margin: '1rem auto' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Favorite movieInfo={movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\r\n                </div>\r\n\r\n                <MovieInfo movie={movie} />\r\n                <br />\r\n\r\n                <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\r\n                    <button onClick={toggleActorView}>Toggle Actor View</button>\r\n                </div>\r\n\r\n                {actorToggle &&\r\n                    <Row gutter={[16, 16]}>\r\n                        {casts && casts.map((cast, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <GridCards\r\n                                    image={cast.profile_path ? `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\r\n                                    actorName={cast.name}\r\n                                />\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Row>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","import React, { useEffect, useState } from 'react'\r\nimport './FavoritePage.css'\r\nimport Axios from 'axios'\r\nimport { Popover } from 'antd'\r\nimport { IMAGE_BASE_URL } from '../../Config'\r\n\r\nfunction FavoritePage() {\r\n    const [favorites, setFavorites] = useState([])\r\n\r\n    const fetchFavoredMovie = () => {\r\n        Axios.post('/api/favorite/getFavoredMovie', { userFrom: localStorage.getItem('userId') })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setFavorites(response.data.favorites)\r\n                } else {\r\n                    alert('영화 정보를 가져오는 데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchFavoredMovie()\r\n    }, [])\r\n\r\n    const onClickDelete = (movieId, userFrom) => {\r\n        const variables = {\r\n            movieId,\r\n            userFrom\r\n        }\r\n\r\n        Axios.post('/api/favorite/removeFromFavorite', variables)\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.data.success) {\r\n                    fetchFavoredMovie()\r\n                } else {\r\n                    alert(\"리스트에서 지우는데 실패했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const renderCards = favorites.map((favorite, index) => {\r\n        const content = (\r\n            <div>\r\n                {\r\n                    favorite.moviePost ?\r\n                        <img src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`} /> :\r\n                        \"no image\"\r\n                }\r\n            </div>\r\n        )\r\n\r\n        return <tr key={index}>\r\n            <Popover content={content} title={`${favorite.movieTitle}`}>\r\n                <td>\r\n                    <a href={`/movie/${favorite.movieId}`}>\r\n                        {favorite.movieTitle}\r\n                    </a>\r\n                </td>\r\n            </Popover>\r\n            <td>{favorite.movieRunTime}분</td>\r\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}>Remove</button></td>\r\n        </tr>\r\n    })\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h2>Favorite Movies</h2>\r\n            <hr />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mobie Title</th>\r\n                        <th>Movie RunTime</th>\r\n                        <th>Remove from favorite</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{renderCards}</tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport MovieDetail from './views/MovieDetail/MovieDetail';\nimport FavoritePage from './views/FavoritePage/FavoritePage';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}